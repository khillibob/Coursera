x<-1
print(x)
x
exit
exit()
quit
quit()
help numeric()
help
help (numeric)
help (na)
??na
f<-function(a,b){
b^2;
}
f(2)
f<-function(a,b){
b^2;
a^3;
}
f(2)
f<-function(a,b){
# b^2;
a^3;
}
f(2)
f
x <- 1:10
if(x > 5) {
x <- 0
}
help("environment")
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
demo()
available.packages()
install.packages("KernSmooth")
load("KernSmooth")
library(KernSmooth)
install.packages("twitteR")
install.packages("tm")
library(tm)
install.packages("wordcloud")
installed.packages("plyr")
setRepositories()
3
install.packages("ggplot2")
setRepositories()
install.packages("plyr")
install.packages("~/Downloads/Udacity/plyr_1.8.3.tar.gz", repos = NULL, type = "source")
which R
which R
version
version
setRepositories()
install.packages("plyr")
install.packages(c("ggplot2","randomForest","RColorBrewer"))
lm()
lm?
ae
?lm
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
z <- 10
f(3)
f(3)
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
parent.frame()
?parent.frame
?set.seed
set.seed(2)
rnorm(5)
rnorm(5)
rnorm(5)
set.seed(2)
rnorm(5)
install.packages("rJava")
Sys.getenv("JAVA_HOME")
install.packages("rJava")
Sys.getenv("JAVA_HOME")
install.packages("rJava")
install.packages("XLConnect")
install.packages("xlsx")
library(xlsx)
library(rJava)
library("rJava", lib.loc="/usr/lib/R/site-library")
library("rJava", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
install.packages("rJava")
library(xlsx)
library(xlsx)
library(xlsx)
library(xlsx)
library(xlsx)
library(XLConnect)
library(XLConnect)
Sys.getenv("JAVA_HOME")
library(httr)
oauth_endpoints("github")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "0a2f2414d1b5746a28ad",
secret = "f76c6c306fd05d0639dcb4526f3c299cbaca17c9")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
detach("package:httr", unload=TRUE)
library("httpuv", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("httr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
content(req)
req$date
req$headers
clear
clear()
cls()
req$headers
content(req)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
list(output[[4]]$name, output[[4]]$created_at)
output <- content(req)
output
output
output[30]$created_at
output$created_at
output[30]
output[30]$created_at
output$created_at
library("jsonlite", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
install.packages("sqldf")
library(RCurl)
detach("package:bitops", unload=TRUE)
library("bitops", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library(XML)
library(httr);
html1 <- GET("http://biostat.jhsph.edu/~jleek/contact.html");
content1 <- content(html1,as="text")
parsehtml <- htmParse(content1,asTest = TRUE)
parsehtml <- htmlParse(content1,asTest = TRUE)
parsehtml <- htmlParse(content1,asText = TRUE)
nchar(parsehtml)
parsehtml
txt <- htmlToText(parsehtml)
library(RCurl)
txt <- htmlToText(parsehtml)
nchar(parsehtml)
nchar
parsehtml
nchar(content1)
a<-read.fwf(url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"))
ur <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
ur
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", destfile = "quiz2_5_input.for", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", destfile = "quiz2_5_input.for", method = "curl")
setwd("~/Documents/Coursera/Getting_Cleaning_data/Week2")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", destfile = "quiz2_5_input.for", method = "curl")
q5 <- read.fwf("quiz2_5_input.for")
q5 <- read.fwf("quiz2_5_input.for",5)
q5
q5 <- read.fwf("quiz2_5_input.for",200)
head(q5)
q5 <- read.fwf("quiz2_5_input.for",200)
q5 <- read.fwf("quiz2_5_input.for",200)
q5 <- read.fwf("quiz2_5_input.for",200)
head(q5)
q5 <- read.fwf("quiz2_5_input.for",2000)
head(q5)
q5
head(q5)
frame_htm <- data.frame(parsehtml)
frame_htm <- data.table(parsehtml)
install.packages("data.table")
frame_htm <- data.table(parsehtml)
library("data.table", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
frame_htm <- data.table(parsehtml)
connection <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(connection)
close(connection)
c(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), nchar(htmlCode[100]))
colnames(q5)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
lines
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d
head(d)
d <- d[, grep("^[^filler]", names(d))]
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
library(httr)
oauth_endpoints("github")
secret = "f76c6c306fd05d0639dcb4526f3c299cbaca17c9")
myapp <- oauth_app("github",
key = "0a2f2414d1b5746a28ad",
secret = "f76c6c306fd05d0639dcb4526f3c299cbaca17c9")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github",
key = "0a2f2414d1b5746a28ad",
secret = "f76c6c306fd05d0639dcb4526f3c299cbaca17c9")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
req <- GET("https://github.com/khillibob/datasharing", config(token = github_token))
stop_for_status(req)
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
req
library(sqldf);
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
query1 <- sqldf("select distinct AGEP from acs")
acs <- data.table(read.csv(f))
query1 <- sqldf("select distinct AGEP from acs")
query1
query2 <- sqldf("select AGEP where unique from acs")
